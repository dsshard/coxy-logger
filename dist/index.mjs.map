{"version":3,"sources":["../src/index.ts"],"names":["s4","uuid","len","toArray","any","Logger","_Logger","params","middleware","flag","isEnabled","type","args","fn","prefix","md","name","logger"],"mappings":"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","file":"index.mjs","sourcesContent":["const s4 = (): string =>\n  Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1)\n\nexport function uuid(len = 100): string {\n  return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`.slice(0, len)\n}\n\nexport function toArray<T>(any: T | T[]): T[] {\n  return Array.isArray(any) ? any : [any]\n}\n\ninterface LoggerConstructorParams {\n  name: string[] | string\n  uuidLen?: number\n  isTime?: boolean\n  isEnabled?: boolean\n}\ntype Args = unknown\ntype Middleware = (...args: Args[]) => void\n\nexport class Logger {\n  protected readonly prefixes: string[] = []\n  private uuid: string = null\n  private isEnabled: boolean\n  private isTime: boolean\n  private lastTime: number\n  private middlewares = []\n  private options: LoggerConstructorParams\n\n  constructor(params?: LoggerConstructorParams) {\n    this.options = params\n    this.isEnabled = params.isEnabled !== false\n    this.isTime = params.isTime === true\n\n    if (params.uuidLen) {\n      this.uuid = uuid(params.uuidLen || 5)\n    }\n    if (params?.name) {\n      this.prefixes.push(...toArray(params?.name))\n    }\n  }\n\n  public use(middleware: Middleware) {\n    this.middlewares.push(middleware)\n  }\n\n  public setEnableStatus(flag: boolean): void {\n    this.isEnabled = flag\n  }\n\n  public setEnableTime(isEnabled: boolean): void {\n    if (isEnabled) {\n      this.lastTime = Date.now()\n    }\n    this.isTime = isEnabled\n  }\n\n  public resetId(): void {\n    this.uuid = uuid(this.options.uuidLen || 5)\n  }\n\n  private message(type: keyof Console, ...args: Args[]): void {\n    // eslint-disable-next-line no-console\n    const fn = console[type] as typeof console.log\n    if (this.isTime) {\n      args.unshift(`[time: ${Date.now() - this.lastTime}ms]`)\n      this.lastTime = Date.now()\n    }\n    if (this.uuid) args.unshift(`[${this.uuid}]`)\n\n    if (this.prefixes.length) {\n      for (const prefix of [...this.prefixes].reverse()) {\n        args.unshift(`[${prefix}]`)\n      }\n    }\n\n    if (this.middlewares.length > 0) {\n      for (const md of this.middlewares) {\n        md(type, ...args)\n      }\n    }\n\n    if (!this.isEnabled) return\n    fn(...args)\n  }\n\n  public fork(params?: LoggerConstructorParams): Logger {\n    let name = this.prefixes\n    if (params.name) {\n      name = [...this.prefixes].concat(...toArray(params.name))\n    }\n    const logger = new Logger({ ...params, name, isEnabled: this.isEnabled })\n    if (this.middlewares.length) {\n      for (const md of this.middlewares) {\n        logger.use(md)\n      }\n    }\n    return logger\n  }\n\n  public log(...args: Args[]): void {\n    this.message('log', ...args)\n  }\n\n  public warn(...args: Args[]): void {\n    this.message('warn', ...args)\n  }\n\n  public error(...args: Args[]): void {\n    this.message('error', ...args)\n  }\n\n  public info(...args: Args[]): void {\n    this.message('info', ...args)\n  }\n}\n"]}